// Copyright 2018 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module apps.mojom;

import "components/services/app_service/public/mojom/types.mojom";

// An intermediary between M app consumers (e.g. app launcher UI, intent
// pickers) and N app providers (also known as app platforms, e.g. Android
// apps, Linux apps and Web apps). It abstracts over platform-specific
// implementations and allow consumers to issue generic queries (e.g. for an
// app's name and icon) that are satisfied by the appropriate provider.
//
// See components/services/app_service/README.md.
//
// Mojom AppService is DEPRECATED. When adding new interfaces, use AppPublisher
// in chrome/browser/apps/app_service/publishers/app_publisher.h.
interface AppService {
  // Called by a publisher of apps to register itself and its apps with the App
  // Service.
  RegisterPublisher(pending_remote<Publisher> publisher, AppType app_type);

  // Called by a consumer that wishes to know about available apps to register
  // itself with the App Service.
  RegisterSubscriber(pending_remote<Subscriber> subscriber, ConnectOptions? opts);
};

interface Publisher {
  // App Registry methods.
  Connect(pending_remote<Subscriber> subscriber, ConnectOptions? opts);
};

// Subscriber works as a proxy, to receive a stream of apps from publishers,
// and save to AppRegistryCache.
interface Subscriber {
  // Receives a stream of apps from publishers, and save to AppRegistryCache.
  // If |should_notify_initialized| is true, notifies observers that |app_type|
  // has finished initiating apps.
  OnApps(array<App> deltas, AppType app_type, bool should_notify_initialized);

  // Binds this to the given receiver (message pipe endpoint), being to Mojo
  // interfaces what POSIX's dup is to file descriptors.
  //
  // See https://groups.google.com/a/chromium.org/d/msg/chromium-mojo/nFhBzGsb5Pg/V7t_8kNRAgAJ
  Clone(pending_receiver<Subscriber> receiver);
};

struct ConnectOptions {
  // TODO: some way to represent l10n info such as the UI language.
};
