[select-event.html]
  [input type password: select() disconnected node]
    expected: FAIL

  [input type password: select() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [input type password: select() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win10.20h2"): PASS
      if product == "chrome": FAIL
      [PASS, FAIL]

  [input type password: selectionDirection a second time (must not fire select)]
    expected: FAIL

  [input type password: selectionDirection disconnected node]
    expected: FAIL

  [input type password: selectionDirection event queue]
    expected:
      if product == "chrome": FAIL

  [input type password: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: selectionEnd a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type password: selectionEnd disconnected node]
    expected: FAIL

  [input type password: selectionEnd event queue]
    expected:
      if product == "chrome": FAIL

  [input type password: selectionEnd out of range a second time (must not fire select)]
    expected: FAIL

  [input type password: selectionEnd out of range disconnected node]
    expected: FAIL

  [input type password: selectionEnd out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type password: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: selectionEnd twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: selectionStart a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type password: selectionStart disconnected node]
    expected: FAIL

  [input type password: selectionStart event queue]
    expected:
      if product == "chrome": FAIL

  [input type password: selectionStart out of range a second time (must not fire select)]
    expected: FAIL

  [input type password: selectionStart out of range disconnected node]
    expected: FAIL

  [input type password: selectionStart out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type password: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: selectionStart twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: setRangeText() a second time (must not fire select)]
    expected: FAIL

  [input type password: setRangeText() disconnected node]
    expected: FAIL

  [input type password: setRangeText() event queue]
    expected:
      if product == "chrome": FAIL

  [input type password: setRangeText() twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type password: setSelectionRange out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type password: setSelectionRange out of range disconnected node]
    expected: FAIL

  [input type password: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type password: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type password: setSelectionRange() a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type password: setSelectionRange() disconnected node]
    expected: FAIL

  [input type password: setSelectionRange() event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type password: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: select() disconnected node]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type search: select() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [input type search: select() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [PASS, FAIL]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [PASS, FAIL]
      if product == "chrome": FAIL

  [input type search: selectionDirection a second time (must not fire select)]
    expected: FAIL

  [input type search: selectionDirection disconnected node]
    expected: FAIL

  [input type search: selectionDirection event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type search: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: selectionEnd a second time (must not fire select)]
    expected: FAIL

  [input type search: selectionEnd disconnected node]
    expected: FAIL

  [input type search: selectionEnd event queue]
    expected:
      if product == "chrome": FAIL

  [input type search: selectionEnd out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type search: selectionEnd out of range disconnected node]
    expected: FAIL

  [input type search: selectionEnd out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type search: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: selectionEnd twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type search: selectionStart a second time (must not fire select)]
    expected: FAIL

  [input type search: selectionStart disconnected node]
    expected: FAIL

  [input type search: selectionStart event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type search: selectionStart out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [PASS, FAIL]
      FAIL

  [input type search: selectionStart out of range disconnected node]
    expected: FAIL

  [input type search: selectionStart out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type search: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: selectionStart twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: setRangeText() a second time (must not fire select)]
    expected: FAIL

  [input type search: setRangeText() disconnected node]
    expected: FAIL

  [input type search: setRangeText() event queue]
    expected:
      if product == "chrome": FAIL

  [input type search: setRangeText() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type search: setSelectionRange out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type search: setSelectionRange out of range disconnected node]
    expected: FAIL

  [input type search: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type search: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type search: setSelectionRange() a second time (must not fire select)]
    expected: FAIL

  [input type search: setSelectionRange() disconnected node]
    expected: FAIL

  [input type search: setSelectionRange() event queue]
    expected:
      if product == "chrome": FAIL

  [input type search: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type tel: select() disconnected node]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type tel: select() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [input type tel: select() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [PASS, FAIL]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [PASS, FAIL]
      if product == "chrome": FAIL

  [input type tel: selectionDirection a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type tel: selectionDirection disconnected node]
    expected: FAIL

  [input type tel: selectionDirection event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": FAIL

  [input type tel: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: selectionEnd a second time (must not fire select)]
    expected:
      if product == "chrome": [PASS, FAIL]
      FAIL

  [input type tel: selectionEnd disconnected node]
    expected: FAIL

  [input type tel: selectionEnd event queue]
    expected:
      if product == "chrome": FAIL

  [input type tel: selectionEnd out of range a second time (must not fire select)]
    expected: FAIL

  [input type tel: selectionEnd out of range disconnected node]
    expected: FAIL

  [input type tel: selectionEnd out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type tel: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: selectionEnd twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: selectionStart a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type tel: selectionStart disconnected node]
    expected: FAIL

  [input type tel: selectionStart event queue]
    expected:
      if product == "chrome": FAIL

  [input type tel: selectionStart out of range a second time (must not fire select)]
    expected: FAIL

  [input type tel: selectionStart out of range disconnected node]
    expected: FAIL

  [input type tel: selectionStart out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type tel: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: selectionStart twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: setRangeText() a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      FAIL

  [input type tel: setRangeText() disconnected node]
    expected: FAIL

  [input type tel: setRangeText() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [input type tel: setRangeText() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      FAIL

  [input type tel: setSelectionRange out of range a second time (must not fire select)]
    expected: FAIL

  [input type tel: setSelectionRange out of range disconnected node]
    expected: FAIL

  [input type tel: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type tel: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type tel: setSelectionRange() a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      FAIL

  [input type tel: setSelectionRange() disconnected node]
    expected: FAIL

  [input type tel: setSelectionRange() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [input type tel: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      FAIL

  [input type text: select() disconnected node]
    expected: FAIL

  [input type text: select() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      FAIL

  [input type text: select() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [input type text: selectionDirection a second time (must not fire select)]
    expected: FAIL

  [input type text: selectionDirection disconnected node]
    expected: FAIL

  [input type text: selectionDirection event queue]
    expected:
      if product == "chrome": FAIL

  [input type text: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type text: selectionEnd a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      FAIL

  [input type text: selectionEnd disconnected node]
    expected: FAIL

  [input type text: selectionEnd event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [input type text: selectionEnd out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [PASS, FAIL]
      FAIL

  [input type text: selectionEnd out of range disconnected node]
    expected: FAIL

  [input type text: selectionEnd out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type text: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type text: selectionEnd twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if product == "chrome": [PASS, FAIL]
      FAIL

  [input type text: selectionStart a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type text: selectionStart disconnected node]
    expected: FAIL

  [input type text: selectionStart event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [PASS, FAIL]
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [input type text: selectionStart out of range a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      if product == "chrome": [PASS, FAIL]
      FAIL

  [input type text: selectionStart out of range disconnected node]
    expected: FAIL

  [input type text: selectionStart out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type text: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type text: selectionStart twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): [FAIL, PASS]
      if (product == "content_shell") and (os == "linux") and (flag_specific == ""): [FAIL, PASS]
      FAIL

  [input type text: setRangeText() a second time (must not fire select)]
    expected: FAIL

  [input type text: setRangeText() disconnected node]
    expected: FAIL

  [input type text: setRangeText() event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type text: setRangeText() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type text: setSelectionRange out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type text: setSelectionRange out of range disconnected node]
    expected: FAIL

  [input type text: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type text: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type text: setSelectionRange() a second time (must not fire select)]
    expected: FAIL

  [input type text: setSelectionRange() disconnected node]
    expected: FAIL

  [input type text: setSelectionRange() event queue]
    expected:
      if product == "chrome": [PASS, FAIL]

  [input type text: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: select() disconnected node]
    expected: FAIL

  [input type url: select() event queue]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): FAIL
      if product == "chrome": FAIL
      [FAIL, PASS]

  [input type url: select() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "linux") and (flag_specific == "disable-site-isolation-trials"): PASS
      if product == "chrome": FAIL
      [PASS, FAIL]

  [input type url: selectionDirection a second time (must not fire select)]
    expected: FAIL

  [input type url: selectionDirection disconnected node]
    expected: FAIL

  [input type url: selectionDirection event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type url: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: selectionEnd a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type url: selectionEnd disconnected node]
    expected: FAIL

  [input type url: selectionEnd event queue]
    expected:
      if product == "chrome": FAIL

  [input type url: selectionEnd out of range a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [input type url: selectionEnd out of range disconnected node]
    expected: FAIL

  [input type url: selectionEnd out of range event queue]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [PASS, FAIL]
      if product == "chrome": FAIL

  [input type url: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [input type url: selectionEnd twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: selectionStart a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type url: selectionStart disconnected node]
    expected: FAIL

  [input type url: selectionStart event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type url: selectionStart out of range a second time (must not fire select)]
    expected: FAIL

  [input type url: selectionStart out of range disconnected node]
    expected: FAIL

  [input type url: selectionStart out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [input type url: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: selectionStart twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: setRangeText() a second time (must not fire select)]
    expected: FAIL

  [input type url: setRangeText() disconnected node]
    expected: FAIL

  [input type url: setRangeText() event queue]
    expected:
      if product == "chrome": FAIL

  [input type url: setRangeText() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [input type url: setSelectionRange out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type url: setSelectionRange out of range disconnected node]
    expected: FAIL

  [input type url: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": FAIL

  [input type url: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [input type url: setSelectionRange() a second time (must not fire select)]
    expected: FAIL

  [input type url: setSelectionRange() disconnected node]
    expected: FAIL

  [input type url: setSelectionRange() event queue]
    expected:
      if product == "chrome": FAIL

  [input type url: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected: FAIL

  [textarea: select() disconnected node]
    expected:
      if product == "chrome": [PASS, FAIL]

  [textarea: select() event queue]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: select() twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [PASS, FAIL]
      FAIL

  [textarea: selectionDirection a second time (must not fire select)]
    expected: FAIL

  [textarea: selectionDirection disconnected node]
    expected: FAIL

  [textarea: selectionDirection event queue]
    expected:
      if product == "chrome": [PASS, FAIL]

  [textarea: selectionDirection twice in disconnected node (must fire select only once)]
    expected: FAIL

  [textarea: selectionEnd a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: selectionEnd disconnected node]
    expected: FAIL

  [textarea: selectionEnd event queue]
    expected:
      if product == "chrome": FAIL

  [textarea: selectionEnd out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: selectionEnd out of range disconnected node]
    expected: FAIL

  [textarea: selectionEnd out of range event queue]
    expected:
      if product == "chrome": FAIL

  [textarea: selectionEnd out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [textarea: selectionEnd twice in disconnected node (must fire select only once)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: selectionStart a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]

  [textarea: selectionStart disconnected node]
    expected: FAIL

  [textarea: selectionStart event queue]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [textarea: selectionStart out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: selectionStart out of range disconnected node]
    expected: FAIL

  [textarea: selectionStart out of range event queue]
    expected:
      if product == "chrome": [FAIL, PASS]

  [textarea: selectionStart out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [textarea: selectionStart twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [PASS, FAIL]
      if product == "chrome": [FAIL, PASS]

  [textarea: setRangeText() a second time (must not fire select)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: setRangeText() disconnected node]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: setRangeText() event queue]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [PASS, FAIL]
      if product == "chrome": FAIL

  [textarea: setRangeText() twice in disconnected node (must fire select only once)]
    expected:
      if (product == "content_shell") and (os == "win") and (port == "win11"): [FAIL, PASS]
      FAIL

  [textarea: setSelectionRange out of range a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: setSelectionRange out of range disconnected node]
    expected: FAIL

  [textarea: setSelectionRange out of range event queue]
    expected:
      if product == "chrome": FAIL

  [textarea: setSelectionRange out of range twice in disconnected node (must fire select only once)]
    expected: FAIL

  [textarea: setSelectionRange() a second time (must not fire select)]
    expected:
      if product == "chrome": [FAIL, PASS]
      FAIL

  [textarea: setSelectionRange() disconnected node]
    expected: FAIL

  [textarea: setSelectionRange() event queue]
    expected:
      if product == "chrome": FAIL

  [textarea: setSelectionRange() twice in disconnected node (must fire select only once)]
    expected: FAIL
