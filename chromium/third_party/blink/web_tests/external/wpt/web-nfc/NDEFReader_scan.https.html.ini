[NDEFReader_scan.https.html]
  expected:
    if product == "chrome": ERROR
  [Test that NDEFReader.scan rejects if signal is not an AbortSignal.]
    expected:
      if product == "chrome": FAIL

  [NDEFReader.scan should fail if user permission is not granted.]
    expected:
      if product == "chrome": FAIL

  [NDEFReader.scan should fail if no implementation for NFC Mojo interface.]
    expected:
      if product == "chrome": FAIL

  [NDEFReader.scan should fail if NFC HW is disabled.]
    expected:
      if product == "chrome": FAIL

  [NDEFReader.scan should fail if NFC HW is not supported.]
    expected:
      if product == "chrome": FAIL

  [Test that WebNFC API is not accessible from iframe context.]
    expected:
      if product == "chrome": FAIL

  [Test that nfc watch success if NFC HW is enabled.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.scan rejects if NDEFScanOptions.signal is already aborted.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.scan rejects if NDEFScanOptions.signal aborts right after the scan invocation.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.scan signals are independant.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader can not get any reading events once the signal aborts.]
    expected:
      if product == "chrome": FAIL

  [NDEFRecord.toRecords returns its embedded records correctly.]
    expected:
      if product == "chrome": FAIL

  [NDEFReader.scan returns smart-poster record correctly.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.onreadingerror should be fired if the NFC tag does not expose NDEF technology.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.onreading should be fired on an unformatted NFC tag with empty records array for NDEFMessage.]
    expected:
      if product == "chrome": FAIL

  [Test that reading message with multiple records should succeed.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.scan rejects if there is already an ongoing scan.]
    expected:
      if product == "chrome": FAIL

  [Test that NDEFReader.scan can be started after the previous scan is aborted.]
    expected:
      if product == "chrome": FAIL
