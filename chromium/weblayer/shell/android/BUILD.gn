# Copyright 2019 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//android_webview/system_webview_apk_tmpl.gni")
import("//build/config/android/abi.gni")
import("//build/config/android/config.gni")
import("//build/config/android/rules.gni")
import("//build/config/python.gni")
import("//device/vr/buildflags/buildflags.gni")
import("//third_party/icu/config.gni")
import("//tools/v8_context_snapshot/v8_context_snapshot.gni")
import("//weblayer/variables.gni")

generate_wrapper("run_browserfragment_shell") {
  testonly = true
  wrapper_script = "$root_out_dir/bin/run_browserfragment_shell"
  executable = "//weblayer/tools/run_weblayer_shell.py"
  executable_args = [
    "--shell-apk-path",
    "@WrappedPath(apks/BFShellSandbox.apk)",
    "--support-apk-path",
    "@WrappedPath(apks/BFSandbox.apk)",
    "--support-apk-path",
    "@WrappedPath(apks/WebLayerSupport.apk)",
  ]

  deps = [
    ":browser_sandbox_apk",
    ":browserfragment_shell_sandbox_apk",
    ":weblayer_support_apk",
  ]
}

generate_wrapper("run_browserfragment_shell_local") {
  testonly = true
  wrapper_script = "$root_out_dir/bin/run_browserfragment_shell_local"
  executable = "//weblayer/tools/run_weblayer_shell.py"
  executable_args = [
    "--shell-apk-path",
    "@WrappedPath(apks/BFShellLocal.apk)",
    "--support-apk-path",
    "@WrappedPath(apks/WebLayerSupport.apk)",
  ]

  deps = [
    ":browser_sandbox_apk",
    ":browserfragment_shell_local_apk",
    ":weblayer_support_apk",
  ]
}

weblayer_support_manifest =
    "$target_gen_dir/weblayer_support_manifest/AndroidManifest.xml"

jinja_template("weblayer_support_manifest") {
  input = "support_apk/AndroidManifest.xml"
  output = weblayer_support_manifest
}

android_apk("weblayer_support_apk") {
  testonly = true

  # Test runner does not support having "additional apks" that are incremental.
  never_incremental = true

  deps = [
    ":weblayer_support_manifest",
    "//android_webview:locale_pak_assets",
    "//android_webview:pak_file_assets",
    "//android_webview:weblayer_webview_assets",
    "//weblayer:locale_pak_assets",
    "//weblayer/browser/java",
    "//weblayer/browser/java:test_java",
  ]

  # Transitive dependencies
  deps += [
    "//components/safe_browsing/android:safe_browsing_java",
    "//components/viz/service:service_java",
    "//media/base/android:media_java",
    "//media/capture/video/android:capture_java",
    "//mojo/public/java:system_java",
    "//net/android:net_java",
  ]

  # default upstream classes
  deps += [ "//weblayer/browser/java:upstream_java" ]

  # Add the Chromium linker for WebView compatibility support on L-M.
  deps += [ "//base/android/linker:chromium_android_linker" ]
  loadable_modules =
      [ "$root_out_dir/libchromium_android_linker$shlib_extension" ]

  if (enable_arcore) {
    _libarcore_dir = get_label_info(
                         "//third_party/arcore-android-sdk-client:com_google_ar_core_java($default_toolchain)",
                         "target_out_dir") + "/com_google_ar_core_java/jni"
    loadable_modules +=
        [ "$_libarcore_dir/$android_app_abi/libarcore_sdk_c.so" ]
    deps += [
      "//third_party/arcore-android-sdk-client:com_google_ar_core_J__unpack_aar",
      "//third_party/arcore-android-sdk-client:com_google_ar_core_java__ignored_manifest",
    ]
  }

  apk_name = "WebLayerSupport"
  android_manifest = weblayer_support_manifest
  min_sdk_version = default_min_sdk_version
  target_sdk_version = 28
  android_manifest_dep = ":weblayer_support_manifest"
  shared_resources = true
  version_name = chrome_version_name
  version_code = webview_stable_version_code

  product_config_java_packages = [ weblayer_product_config_java_package ]

  shared_libraries = [ "//weblayer:libweblayer_test" ]
}

android_resources("browserfragment_shell_resources") {
  sources = [
    "browserfragment_shell_apk/res/layout/main.xml",
    "browserfragment_shell_apk/res/values/strings.xml",
    "browserfragment_shell_apk/res/values/styles.xml",
  ]
}

android_library("browserfragment_shell_java") {
  testonly = true
  resources_package = "org.chromium.browserfragment.shell"

  sources = [ "browserfragment_shell_apk/src/org/chromium/browserfragment/shell/BrowserFragmentShellActivity.java" ]

  deps = [
    ":browserfragment_service_provider_resources",
    ":browserfragment_shell_resources",
    "//base:base_java",
    "//third_party/android_deps:com_google_guava_guava_android_java",
    "//third_party/androidx:androidx_appcompat_appcompat_java",
    "//third_party/androidx:androidx_fragment_fragment_java",
    "//weblayer/public/java:browserfragment_java",
    "//weblayer/public/java:service_provider_java",
  ]
}

template("browserfragment_shell_apk_helper") {
  _browserfragment_shell_manifest =
      "$target_gen_dir/manifest_$target_name/AndroidManifest.xml"
  _manifest_target = target_name + "_manifest"

  jinja_template(_manifest_target) {
    input = "browserfragment_shell_apk/AndroidManifest.xml"
    output = _browserfragment_shell_manifest
    if (defined(invoker.browser_process_mode)) {
      variables = [ "browser_process_mode=" + invoker.browser_process_mode ]
    }
  }
  android_apk(target_name + "_apk") {
    testonly = true
    apk_name = invoker.apk_name

    # Test runner does not support having "additional apks" that are incremental.
    never_incremental = true

    deps = [
      ":$_manifest_target",
      ":browserfragment_shell_java",
    ]

    android_manifest = _browserfragment_shell_manifest
    android_manifest_dep = ":$_manifest_target"
    min_sdk_version = default_min_sdk_version
    target_sdk_version = 28
  }
}

browserfragment_shell_apk_helper("browserfragment_shell_local") {
  browser_process_mode = "local"
  apk_name = "BFShellLocal"
}

browserfragment_shell_apk_helper("browserfragment_shell_sandbox") {
  browser_process_mode = "sandbox"
  apk_name = "BFShellSandbox"
}

browserfragment_services_manifest =
    "$target_gen_dir/service_provider/AndroidManifest.xml"

jinja_template("browserfragment_services_manifest") {
  input = "service_provider/AndroidManifest.xml"
  output = browserfragment_services_manifest
}

android_resources("browserfragment_service_provider_resources") {
  testonly = true
  android_manifest = browserfragment_services_manifest
  android_manifest_dep = ":browserfragment_services_manifest"

  deps = [ ":browserfragment_services_manifest" ]
}

# TODO(swestphal): Make this an AAR when BrowserProcess service can run in isolated process.
android_apk("browser_sandbox_apk") {
  testonly = true

  # Test runner does not support having "additional apks" that are incremental.
  never_incremental = true

  deps = [
    ":browserfragment_service_provider_resources",
    "//weblayer/public/java:browserfragment_interfaces_java",
    "//weblayer/public/java:service_provider_java",
  ]

  apk_name = "BFSandbox"
  android_manifest = browserfragment_services_manifest
  android_manifest_dep = ":browserfragment_services_manifest"
  min_sdk_version = default_min_sdk_version
  target_sdk_version = 28
  shared_resources = true
}
