// Copyright (c) 2017 Vivaldi Technologies AS. All rights reserved
[
  {
    "namespace": "contacts",
    "description": "Use the <code>vivaldi.contacts</code> API to manipulate contacts.",
    "types": [
      {
        "id": "ContactPropertyName",
        "type": "string",
        "enum": [ "postalAddress", "phoneNumber" ],
        "description": "Property types for adding, updating and removing postal address and phonenumbers for contacts."
      },
      {
        "id": "EmailAddress",
        "type": "object",
        "description": "An email address object",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the email address. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "emailAddress": {
            "type": "string",
            "optional": true,
            "description": "The email address of the contact."
          },
          "type": {
            "type": "string",
            "optional": true,
            "description": "The type of email address. WORK, HOME etc"
          },
          "favorite": {
            "type": "boolean",
            "optional": true,
            "description": "Is this email address favorite for user."
          },
          "obsolete": {
            "type": "boolean",
            "optional": true,
            "description": "Is this email address obsolete. If true it should not show up in autocomplete when composing email"
          }
        }
      },
      {
        "id": "Phonenumber",
        "type": "object",
        "description": "A phonenumber object",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the phonenumber. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "phoneNumber": {
            "type": "string",
            "optional": true,
            "description": "The phonenumber."
          },
          "type": {
            "type": "string",
            "optional": true,
            "description": "The type of phonenumber. WORK, HOME etc"
          }
        }
      },
      {
        "id": "PostalAddress",
        "type": "object",
        "description": "A postal address object",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the postal address. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "postalAddress": {
            "type": "string",
            "optional": true,
            "description": "The postal address."
          },
          "type": {
            "type": "string",
            "optional": true,
            "description": "The type of postal address. WORK, HOME etc"
          }
        }
      },
      {
        "id": "Contact",
        "type": "object",
        "description": "A contact object",
        "properties": {
          "id": {
            "type": "string",
            "minimum": 0,
            "description": "The unique identifier for the contact. IDs are unique within the current profile, and they remain valid even after the browser is restarted."
          },
          "name": {
            "type": "string",
            "optional": true,
            "description": "The name id of the contact."
          },
          "birthday": {
            "type": "number",
            "optional": true,
            "description": "The birthday of the contact."
          },
          "note": {
            "type": "string",
            "optional": true,
            "description": "A note for the contact."
          },
          "emailAddresses": {
            "type": "array",
            "items": { "$ref": "EmailAddress" }
          },
          "phoneNumbers": {
            "type": "array",
            "items": { "$ref": "Phonenumber" }
          },
          "postalAddresses": {
            "type": "array",
            "items": { "$ref": "PostalAddress" }
          },
          "avatarUrl": {
            "type": "string",
            "optional": true,
            "description": "A url for the contact avatar url."
          },
          "separator": {
            "type": "boolean",
            "description": "Is this contact a dummy separator."
          },
          "generatedFromSentMail": {
            "type": "boolean",
            "description": "Is this contact generated by sent mail."
          },
          "trusted": {
            "type": "boolean",
            "optional": true,
            "description": "Can this contact load external content"
          }
        }
      },
      {
        "id": "CreateUpdateDetails",
        "description": "Object passed to the create and update contact function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "optional": true,
            "description": "The name of the contact."
          },
          "birthday": {
            "type": "number",
            "optional": true,
            "description": "The birthday of the contact. In milliseconds since epoch"
          },
          "note": {
            "type": "string",
            "description": "The note for the contact.",
            "optional": true
          },
          "generatedFromSentMail": {
            "type": "boolean",
            "description": "Was this contact generated by sent mail.",
            "optional": true
          },
          "avatarUrl": {
            "type": "string",
            "optional": true,
            "description": "A url for the contact avatar url."
          },
          "separator": {
            "type": "boolean",
            "optional": true,
            "description": "Is this contact a dummy separator."
          },
          "trusted": {
            "type": "boolean",
            "optional": true,
            "description": "Can this contact load external content"
          }
        }
      },
      {
        "id": "AddPropertyDetails",
        "description": "Object passed to the addPropertyItem() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "propertyName": {
            "$ref": "ContactPropertyName",
            "optional": false,
            "description": "The type to add (postal address, phone)."
          },
          "contactId": {
            "type": "string",
            "optional": false,
            "description": "The id of the contact."
          },
          "propertyValue": {
            "type": "string",
            "optional": false,
            "description": "The email address or phonenumber of the contact."
          },
          "type": {
            "type": "string",
            "description": "The type of email address. Example: WORK, HOME. Note type=INTERNET is default."
          },
          "asDefault": {
            "type": "boolean",
            "description": "Should the email address be default for the contact",
            "optional": true
          }
        }
      },
      {
        "id": "EmailAddressAddUpdate",
        "description": "Object passed to the addPropertyItem() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "contactId": {
            "type": "string",
            "description": "The id of the contact."
          },
          "emailAddress": {
            "type": "string",
            "optional": true,
            "description": "The email address of the contact."
          },
          "type": {
            "type": "string",
            "optional": true,
            "description": "The type of email address. WORK, HOME etc"
          },
          "favorite": {
            "type": "boolean",
            "optional": true,
            "description": "Is this email address favorite for user."
          },
          "obsolete": {
            "type": "boolean",
            "optional": true,
            "description": "Is this email address obsolete. If true it should not show up in autocomplete when composing email"
          }
        }
      },
      {
        "id": "RemovePropertyDetails",
        "description": "Object passed to the removeProperty() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "propertyName": {
            "$ref": "ContactPropertyName",
            "optional": false,
            "description": "The property name to remove (postal address, phone)."
          },
          "contactId": {
            "type": "string",
            "optional": false,
            "description": "The id of the contact."
          },
          "propertyId": {
            "type": "string",
            "optional": false,
            "description": "The email address of the contact."
          }
        }
      },
      {
        "id": "UpdatePropertyDetails",
        "description": "Object passed to the updateProperty() function.",
        "inline_doc": true,
        "type": "object",
        "properties": {
          "propertyName": {
            "$ref": "ContactPropertyName",
            "optional": false,
            "description": "The property name to be updated (address, phone)."
          },
          "contactId": {
            "type": "string",
            "optional": false,
            "description": "The id of the contact."
          },
          "propertyId": {
            "type": "string",
            "optional": false,
            "description": "The id of the property to be updated."
          },
          "propertyValue": {
            "type": "string",
            "optional": false,
            "description": "The email address or phonenumber value to update for the given contact."
          },
          "type": {
            "type": "string",
            "optional": false,
            "description": "The type of address, phone. WORK, HOME etc"
          }
        }
      },
      {
        "id": "CreateManyContactsResults",
        "type": "object",
        "description": "Object stating how many contacts were created successfully and how many creations resulted in errors",
        "properties": {
          "created_count": {
            "description": "Number of contacts created",
            "type": "integer",
            "optional": true
          },
          "failed_count": {
            "description": "Number of failed contacts creation attempts",
            "type": "integer",
            "optional": true
          }
        }
      }
    ],
    "functions": [
      {
        "name": "getAll",
        "type": "function",
        "description": "Retrieves all contacts",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "results",
              "type": "array",
              "items": {
                "$ref": "Contact"
              }
            }
          ]
        }
      },
      {
        "name": "getAllEmailAddresses",
        "type": "function",
        "description": "Retrieves all email addresses for all contacts",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "results",
              "type": "array",
              "items": {
                "$ref": "EmailAddress"
              }
            }
          ]
        }
      },
      {
        "name": "create",
        "type": "function",
        "description": "Creates a contact.",
        "parameters": [
          {
            "$ref": "CreateUpdateDetails",
            "name": "contact"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "createMany",
        "type": "function",
        "description": "Creates / imports multiple contacts.",
        "parameters": [
          {
            "name": "contactList",
            "type": "array",
            "items": {
              "$ref": "CreateUpdateDetails"
            },
            "minItems": 1
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "CreateManyContactsResults"
            }
          ]
        }
      },
      {
        "name": "update",
        "type": "function",
        "description": "Updates the properties of a contact. Specify only the properties that you want to change. Unspecified properties will be left unchanged.",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "description": "The contact id to be updated"
          },
          {
            "$ref": "CreateUpdateDetails",
            "name": "changes"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "delete",
        "type": "function",
        "description": "Deletes a contact.",
        "parameters": [
          {
            "type": "string",
            "name": "id"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "addPropertyItem",
        "type": "function",
        "description": "Adds a property to a contact.",
        "parameters": [
          {
            "$ref": "AddPropertyDetails",
            "name": "propertyToAdd"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "addEmailAddress",
        "type": "function",
        "description": "Adds an email address to a contact.",
        "parameters": [
          {
            "$ref": "EmailAddressAddUpdate",
            "name": "emailToAdd",
            "description": "Object holding the fields for the email address to create"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "updateEmailAddress",
        "type": "function",
        "description": "Updates an email address for a contact.",
        "parameters": [
          {
            "type": "string",
            "name": "emailAddressId",
            "description": "The id of email address to update"
          },
          {
            "$ref": "EmailAddressAddUpdate",
            "name": "emailToUpdate",
            "description": "Object holding the fields for the email address to update"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "removeEmailAddress",
        "type": "function",
        "description": "Removes an email address for a contact.",
        "parameters": [
          {
            "type": "object",
            "name": "removeEmail",
            "description": "An object specifying properties to remove email address.",
            "properties": {
              "contactId": {
                "type": "string",
                "optional": false,
                "description": "The contact id of which email address to remove."
              },
              "emailAddressId": {
                "type": "string",
                "optional": false,
                "description": "The id of email address to remove"
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "updatePropertyItem",
        "type": "function",
        "description": "Updates a property for a contact.",
        "parameters": [
          {
            "$ref": "UpdatePropertyDetails",
            "name": "propertyToUpdate"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "removePropertyItem",
        "type": "function",
        "description": "Removes a property from a contact.",
        "parameters": [
          {
            "$ref": "RemovePropertyDetails",
            "name": "propertyToRemove"
          }
        ],
        "returns_async": {
          "name": "callback",
          "optional": true,
          "parameters": [
            {
              "name": "result",
              "$ref": "Contact"
            }
          ]
        }
      },
      {
        "name": "readThunderbirdContacts",
        "type": "function",
        "description": "Read thunderbird contacts from db files.",
        "parameters": [
          {
            "name": "path",
            "type": "string",
            "description": "Profile Path to thunderbird directory, containing: abook.sqlite and history.sqlite files."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "results",
              "type": "array",
              "items": { "$ref": "Contact" }
            }
          ]
        }
      }
    ],
    "events": [
      {
        "name": "onContactCreated",
        "type": "function",
        "description": "Fired when a contact is created.",
        "parameters": [
          {
            "name": "createdContact",
            "$ref": "Contact",
            "description": "The created contact"
          }
        ]
      },
      {
        "name": "onContactRemoved",
        "type": "function",
        "description": "Fired when contact is deleted.",
        "parameters": [
          {
            "name": "removedContact",
            "$ref": "Contact",
            "description": "The deleted contact"
          }
        ]
      },
      {
        "name": "onContactChanged",
        "type": "function",
        "description": "Fired when contact is updated.",
        "parameters": [
          {
            "name": "changedContact",
            "$ref": "Contact",
            "description": "The changed contact"
          }
        ]
      }
    ]
  }
]
