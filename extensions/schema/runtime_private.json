// Copyright (c) 2016 Vivaldi Technologies AS. All rights reserved

[
  {
    "namespace": "runtimePrivate",
    "description": "Use the <code>vivaldi.runtimePrivate</code> API to access.",
    "compiler_options": {
      "implemented_in": "extensions/api/runtime/runtime_api.h"
    },
    "types": [
      {
        "id": "FeatureFlagInfo",
        "type": "object",
        "description": "Object returned from the getAllFeatureFlags function.",
        "properties": {
          "name": {
            "description": "Name of this feature flag. This is the key used to look up the name.",
            "type": "string"
          },
          "friendlyName": {
            "description": "This is the normalized name of this feature flag suitable to be showed to the user.",
            "type": "string"
          },
          "description": {
            "description": "Description of this feature flag.",
            "type": "string"
          },
          "value": {
            "description": "The current value for this flag (true or false).",
            "type": "boolean"
          },
          "locked": {
            "description": "Locked from being changed. If true, it cannot be changed as it's locked from command line.",
            "type": "boolean"
          }
        }
      },
      {
        "id": "UserProfile",
        "type": "object",
        "description": "Object returned from the getUserProfiles function.",
        "properties": {
          "name": {
            "description": "Name of this user profile. For a guest profile, this should be ignored and translated string used instead.",
            "type": "string"
          },
          "active": {
            "description": "true if this is the active profile, otherwise false. ",
            "type": "boolean"
          },
          "path": {
            "description": "Path of this user profile. This is used when opening and deleting profiles as it's unique.",
            "type": "string"
          },
          "image": {
            "description": "base64 encoded data url with the image to use for this profile. Empty for Guest profile.",
            "type": "string"
          },
          "imageIndex": {
            "description": "The index into our array of default images this user is using. Corrensponds to |UserProfileImage| index value. Not valid for guest profiles.",
            "type": "integer"
          },
          "guest": {
            "description": "true if this is the guest profile, otherwise false. ",
            "type": "boolean"
          },
          "customAvatar": {
            "description": "Link to a HTTP-loadble custom avatar, if available.",
            "type": "string"
          }
        }
      },
      {
        "id": "UserProfileImage",
        "type": "object",
        "description": "Object returned from the |getUserProfileImages|.",
        "properties": {
          "index": {
            "description": "Index of this user profile image in the table of available images.",
            "type": "integer"
          },
          "name": {
            "description": "Name of this user profile image.",
            "type": "string"
          },
          "image": {
            "description": "base64 encoded data url with the image.",
            "type": "string"
          }
        }
      },
      {
        "id": "ProfileStatEntry",
        "type": "object",
        "description": "Object returned from the |getProfileStatistics|.",
        "properties": {
          "category": {
            "description": "Category of the count, 'History', 'Passwords' etc..",
            "type": "string"
          },
          "count": {
            "description": "Number of data entries for this category.",
            "type": "integer"
          }
        }
      }
    ],
    "functions": [
      {
        "name": "exit",
        "description": "Close all browsers and exit the application.",
        "type": "function",
        "parameters": [
          {
            "type": "boolean",
            "name": "prompt",
            "description": "Show exit confirmation when true."
          }
        ]
      },
      {
        "name": "restart",
        "description": "Close all browsers and restart the application.",
        "type": "function",
        "parameters": []
      },
      {
        "name": "getAllFeatureFlags",
        "type": "function",
        "description": "Gets all the registered Vivaldi feature flags.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "results",
              "type": "array",
              "items": { "$ref": "FeatureFlagInfo" }
            }
          ]
        }
      },
      {
        "name": "setFeatureEnabled",
        "type": "function",
        "description": "Enables or disables a feature.",
        "parameters": [
          {
            "type": "string",
            "name": "featureName",
            "description": "Name of the feature to enable or disable."
          },
          {
            "type": "boolean",
            "name": "enable",
            "description": "true to enable feature."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if feature name was valid, false on any error."
            }
          ]
        }
      },
      {
        "name": "isGuestSession",
        "type": "function",
        "description": "Checks whether the current profile is running as a guest session or not.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "isGuestSession",
              "description": "true if we're using a guest session, otherwise false."
            }
          ]
        }
      },
      {
        "name": "hasGuestSession",
        "type": "function",
        "description": "Checks whether any guest session is open.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "isGuestSession",
              "description": "true if we're using a guest session, otherwise false."
            }
          ]
        }
      },
      {
        "name": "switchToGuestSession",
        "type": "function",
        "description": "Switch to a guest session.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "closeGuestSession",
        "type": "function",
        "description": "Close all guest session windows.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "openProfileSelectionWindow",
        "type": "function",
        "description": "Open window for profile management.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "getUserProfiles",
        "type": "function",
        "description": "Get all or just the active registered user profile(s).",
        "parameters": [
          {
            "type": "boolean",
            "name": "activeOnly",
            "optional":  true,
            "description": "If true, only return the active profile."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "profiles",
              "type": "array",
              "items": { "$ref": "UserProfile" }
            }
          ]
        }
      },
      {
        "name": "openNamedProfile",
        "type": "function",
        "description": "Open a new window using the given named profile.",
        "parameters": [
          {
            "type": "string",
            "name": "profilePath",
            "description": "Path of the profile to open."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "closeActiveProfile",
        "type": "function",
        "description": "Close all windows for the active profile in this window.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "getUserProfileImages",
        "type": "function",
        "description": "Get all available user profiles images.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "profileImages",
              "type": "array",
              "items": { "$ref": "UserProfileImage" }
            }
          ]
        }
      },
      {
        "name": "updateActiveProfile",
        "type": "function",
        "description": "Updates the name and icon index for the active profile.",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "description": "New name for the profile."
          },
          {
            "type": "integer",
            "name": "avatarIndex",
            "description": "Index into the avatar table for the new avatar."
          },
          {
            "type": "boolean",
            "name": "createDesktopIcon",
            "optional":  true,
            "description": "Create desktop icon if true, otherwise removes any created profile icon for this profile. Windows only."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "hasDesktopShortcut",
        "type": "function",
        "description": "Checks whether the active profile has a generated desktop shortcut. Windows only, other platforms will return false.",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "type": "boolean",
                "name": "hasShortcut",
                "description": "true if the active profile has a desktop shortcut, otherwise false. Windows only, other platforms will always return false."
              },
              {
                "type": "boolean",
                "name": "canModifyShortcut",
                "description": "true if the active profile allows for creating or modifying desktop shortcuts. Will be false if --user-data-dir is used and on non-Windows platforms."
              }
            ]
          }
        ]
      },
      {
        "name": "getProfileDefaults",
        "type": "function",
        "description": "Returns defaults for a new profile.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "string",
              "name": "name",
              "description": "Suggested name for the profile."
            }
          ]
        }
      },
      {
        "name": "createProfile",
        "type": "function",
        "description": "Creates a new profile with the given name and icon.",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "description": "Name for the profile."
          },
          {
            "type": "integer",
            "name": "avatarIndex",
            "description": "Index into the avatar table for the avatar for the new profile."
          },
          {
            "type": "boolean",
            "name": "createDesktopIcon",
            "description": "Create desktop icon."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      },
      {
        "name": "getProfileStatistics",
        "type": "function",
        "description": "Returns statistics for the profile associated with the given profile path.",
        "parameters": [
          {
            "type": "string",
            "name": "profilePath",
            "description": "Path of the profile, unique per profile."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "profileStats",
              "type": "array",
              "items": { "$ref": "ProfileStatEntry" }
            }
          ]
        }
      },
      {
        "name": "deleteProfile",
        "type": "function",
        "description": "Deletes a profile after closing all open windows for that profile.",
        "parameters": [
          {
            "type": "string",
            "name": "profilePath",
            "description": "Path of the profile, unique per profile."
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "boolean",
              "name": "success",
              "description": "true if success, otherwise false."
            }
          ]
        }
      }
    ],
    "events": [
      {
        "name": "onProfilesUpdated",
        "type": "function",
        "description": "Fired when profiles have changed and the UI must be updated to reflect it.",
        "parameters": []
      }
    ]
  }
]
